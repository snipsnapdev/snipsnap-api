kind: pipeline
name: default

steps:
  - name: initial_notification
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack_webhook
      template: >
        Repository: *{{repo.name}}*. Status: *Running*. Author: *{{build.author}}*. Build: *#{{build.number}}*. Branch: *{{build.branch}}*. Event: *{{build.event}}*. Logs: {{build.link}}

  - name: tests
    image: node:12.14.0-alpine3.11
    environment:
      POSTGRESQL_HOST: database
      POSTGRESQL_DB: snipsnap-test
      POSTGRESQL_USERNAME: postgres
      NODE_ENV: test
    commands:
      - npm install
      - npm run lint
      - npm run db:create
      - npm run db:migrate
      - npm run test
  - name: build
    image: plugins/docker
    settings:
      repo: registry.pixelpoint.io/snipsnap-api-prod
      registry: registry.pixelpoint.io
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
    when:
      branch: master
      event: push

  - name: db_migrate
    image: node:12.14.0-alpine3.11
    commands:
      - npm install
      - npm run db:migrate
    environment:
      POSTGRESQL_PORT: 5432
      POSTGRESQL_USERNAME:
        from_secret: db_username_prod
      POSTGRESQL_DB:
        from_secret: db_name_prod
      POSTGRESQL_PASSWORD:
        from_secret: db_pass_prod
      POSTGRESQL_HOST:
        from_secret: db_host_prod
    when:
      event: push
      branch: master

  - name: deploy
    image: peloton/drone-k8s-deployment
    settings:
      insecure: false
      deployment_names: snipsnap-api-prod
      container_names: snipsnap-api-prod
      namespaces: snipsnap-prod
      docker_image: registry.pixelpoint.io/snipsnap-api-prod:latest
      date_label: deployment.drone.io/date-deployed
      url:
        from_secret: kubernetes_url
      token:
        from_secret: kubernetes_token
    when:
      branch: master
      event: push
  - name: build_status_notification
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack_webhook
      template: >
        {{#success build.status}}
        Repository: *{{repo.name}}*. Status: *Completed*. Author: *{{build.author}}*. Build: *#{{build.number}}*. Branch: *{{build.branch}}*. Event: *{{build.event}}*. Logs: {{build.link}}
        {{else}}
        Repository: *{{repo.name}}*. Status: *Failed*. Author: *{{build.author}}*. Build: *#{{build.number}}*. Branch: *{{build.branch}}*. Event: *{{build.event}}*. Logs: {{build.link}}
        {{/success}}
    when:
      status: [success, failure]
services:
  - name: database
    image: postgres:12.1
